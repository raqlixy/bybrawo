{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\raqlixy\\\\Documents\\\\ByBrawo2\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Home from './pages/Home';\nimport Admin from './pages/Admin';\nimport MusicPlayer from './components/MusicPlayer';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [songs, setSongs] = useState([]);\n  const [content, setContent] = useState({});\n  const [currentSong, setCurrentSong] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [audio] = useState(new Audio());\n  useEffect(() => {\n    fetchSongs();\n    fetchContent();\n  }, []);\n  const fetchSongs = async () => {\n    try {\n      const response = await axios.get('/api/songs');\n      setSongs(response.data);\n    } catch (error) {\n      console.error('Şarkılar yüklenirken hata:', error);\n    }\n  };\n  const fetchContent = async () => {\n    try {\n      const response = await axios.get('/api/content');\n      setContent(response.data);\n    } catch (error) {\n      console.error('İçerik yüklenirken hata:', error);\n    }\n  };\n  const playSong = song => {\n    if (currentSong && currentSong.id === song.id) {\n      if (isPlaying) {\n        audio.pause();\n        setIsPlaying(false);\n      } else {\n        audio.play();\n        setIsPlaying(true);\n      }\n    } else {\n      audio.src = `http://localhost:5000/uploads/${song.filename}`;\n      audio.play();\n      setCurrentSong(song);\n      setIsPlaying(true);\n\n      // Dinleme sayısını artır\n      axios.post(`/api/songs/${song.id}/play`);\n    }\n  };\n  const addSong = async songData => {\n    try {\n      const formData = new FormData();\n      formData.append('audio', songData.file);\n      formData.append('title', songData.title);\n      formData.append('artist', songData.artist);\n      formData.append('description', songData.description);\n      await axios.post('/api/songs', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      fetchSongs();\n    } catch (error) {\n      console.error('Şarkı eklenirken hata:', error);\n    }\n  };\n  const deleteSong = async songId => {\n    try {\n      await axios.delete(`/api/songs/${songId}`);\n      fetchSongs();\n    } catch (error) {\n      console.error('Şarkı silinirken hata:', error);\n    }\n  };\n  const updateContent = async newContent => {\n    try {\n      const response = await axios.put('/api/content', newContent);\n      setContent(response.data);\n    } catch (error) {\n      console.error('İçerik güncellenirken hata:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-purple-900 via-blue-900 to-indigo-900\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      content: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto px-4 py-8\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {\n            songs: songs,\n            content: content,\n            onPlaySong: playSong,\n            currentSong: currentSong,\n            isPlaying: isPlaying\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/admin\",\n          element: /*#__PURE__*/_jsxDEV(Admin, {\n            songs: songs,\n            content: content,\n            onAddSong: addSong,\n            onDeleteSong: deleteSong,\n            onUpdateContent: updateContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), currentSong && /*#__PURE__*/_jsxDEV(MusicPlayer, {\n      song: currentSong,\n      isPlaying: isPlaying,\n      onPlayPause: () => playSong(currentSong),\n      audio: audio\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rmpykuzLmTilVnPUXYjpWLfsxsM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Routes","Route","Navbar","Home","Admin","MusicPlayer","axios","jsxDEV","_jsxDEV","App","_s","songs","setSongs","content","setContent","currentSong","setCurrentSong","isPlaying","setIsPlaying","audio","Audio","fetchSongs","fetchContent","response","get","data","error","console","playSong","song","id","pause","play","src","filename","post","addSong","songData","formData","FormData","append","file","title","artist","description","headers","deleteSong","songId","delete","updateContent","newContent","put","className","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onPlaySong","onAddSong","onDeleteSong","onUpdateContent","onPlayPause","_c","$RefreshReg$"],"sources":["C:/Users/raqlixy/Documents/ByBrawo2/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport Navbar from './components/Navbar';\r\nimport Home from './pages/Home';\r\nimport Admin from './pages/Admin';\r\nimport MusicPlayer from './components/MusicPlayer';\r\nimport axios from 'axios';\r\n\r\nfunction App() {\r\n  const [songs, setSongs] = useState([]);\r\n  const [content, setContent] = useState({});\r\n  const [currentSong, setCurrentSong] = useState(null);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [audio] = useState(new Audio());\r\n\r\n  useEffect(() => {\r\n    fetchSongs();\r\n    fetchContent();\r\n  }, []);\r\n\r\n  const fetchSongs = async () => {\r\n    try {\r\n      const response = await axios.get('/api/songs');\r\n      setSongs(response.data);\r\n    } catch (error) {\r\n      console.error('Şarkılar yüklenirken hata:', error);\r\n    }\r\n  };\r\n\r\n  const fetchContent = async () => {\r\n    try {\r\n      const response = await axios.get('/api/content');\r\n      setContent(response.data);\r\n    } catch (error) {\r\n      console.error('İçerik yüklenirken hata:', error);\r\n    }\r\n  };\r\n\r\n  const playSong = (song) => {\r\n    if (currentSong && currentSong.id === song.id) {\r\n      if (isPlaying) {\r\n        audio.pause();\r\n        setIsPlaying(false);\r\n      } else {\r\n        audio.play();\r\n        setIsPlaying(true);\r\n      }\r\n    } else {\r\n      audio.src = `http://localhost:5000/uploads/${song.filename}`;\r\n      audio.play();\r\n      setCurrentSong(song);\r\n      setIsPlaying(true);\r\n      \r\n      // Dinleme sayısını artır\r\n      axios.post(`/api/songs/${song.id}/play`);\r\n    }\r\n  };\r\n\r\n  const addSong = async (songData) => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('audio', songData.file);\r\n      formData.append('title', songData.title);\r\n      formData.append('artist', songData.artist);\r\n      formData.append('description', songData.description);\r\n\r\n      await axios.post('/api/songs', formData, {\r\n        headers: { 'Content-Type': 'multipart/form-data' }\r\n      });\r\n      \r\n      fetchSongs();\r\n    } catch (error) {\r\n      console.error('Şarkı eklenirken hata:', error);\r\n    }\r\n  };\r\n\r\n  const deleteSong = async (songId) => {\r\n    try {\r\n      await axios.delete(`/api/songs/${songId}`);\r\n      fetchSongs();\r\n    } catch (error) {\r\n      console.error('Şarkı silinirken hata:', error);\r\n    }\r\n  };\r\n\r\n  const updateContent = async (newContent) => {\r\n    try {\r\n      const response = await axios.put('/api/content', newContent);\r\n      setContent(response.data);\r\n    } catch (error) {\r\n      console.error('İçerik güncellenirken hata:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-purple-900 via-blue-900 to-indigo-900\">\r\n      <Navbar content={content} />\r\n      <div className=\"container mx-auto px-4 py-8\">\r\n        <Routes>\r\n          <Route \r\n            path=\"/\" \r\n            element={\r\n              <Home \r\n                songs={songs} \r\n                content={content}\r\n                onPlaySong={playSong}\r\n                currentSong={currentSong}\r\n                isPlaying={isPlaying}\r\n              />\r\n            } \r\n          />\r\n          <Route \r\n            path=\"/admin\" \r\n            element={\r\n              <Admin \r\n                songs={songs}\r\n                content={content}\r\n                onAddSong={addSong}\r\n                onDeleteSong={deleteSong}\r\n                onUpdateContent={updateContent}\r\n              />\r\n            } \r\n          />\r\n        </Routes>\r\n      </div>\r\n      {currentSong && (\r\n        <MusicPlayer\r\n          song={currentSong}\r\n          isPlaying={isPlaying}\r\n          onPlayPause={() => playSong(currentSong)}\r\n          audio={audio}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}